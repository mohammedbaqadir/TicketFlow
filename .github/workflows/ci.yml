name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql
          coverage: pcov

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: 'npm'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Node dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Set up Environment Variables
        run: |
          echo "APP_NAME=TicketFlow" >> $GITHUB_ENV
          echo "APP_ENV=testing" >> $GITHUB_ENV
          echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> $GITHUB_ENV
          echo "APP_URL=http://localhost" >> $GITHUB_ENV
          echo "DB_CONNECTION=mysql" >> $GITHUB_ENV
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "DB_DATABASE=test_db" >> $GITHUB_ENV
          echo "DB_USERNAME=root" >> $GITHUB_ENV
          echo "DB_PASSWORD=password" >> $GITHUB_ENV
          echo "SCOUT_DRIVER=meilisearch" >> $GITHUB_ENV
          echo "MEILISEARCH_HOST=http://localhost:7700" >> $GITHUB_ENV
          echo "MEILISEARCH_KEY=aSampleMasterKey" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=" >> $GITHUB_ENV
          echo "JITSI_VPAAS_MAGIC_COOKIE=" >> $GITHUB_ENV

      - name: Wait for MySQL
        run: |
          until mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "SHOW DATABASES"; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Migrations
        run: php artisan migrate --env=testing

      - name: Install and Start Meilisearch
        run: |
          curl -L https://install.meilisearch.com | sh
          nohup ./meilisearch --master-key "aSampleMasterKey" > meilisearch.log 2>&1 &
          sleep 5  # Give Meilisearch time to start

      - name: Scout Import
        run: php artisan scout:import "App\Models\Ticket"

      - name: Run Tests
        run: ./vendor/bin/pest
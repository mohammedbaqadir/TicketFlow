name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'database/migrations/**'
      - '**.php'
      - 'composer.lock'
  pull_request:
    branches: [ main ]
    paths:
      - 'database/migrations/**'
      - '**.php'
      - 'composer.lock'

concurrency:
  group: ci-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  verify-secrets:
    name: Verify Required Secrets
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      secrets_valid: ${{ steps.validate-secrets.outputs.secrets_valid }}
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      JITSI_VPAAS_MAGIC_COOKIE: ${{ secrets.JITSI_VPAAS_MAGIC_COOKIE }}
    steps:
      - id: validate-secrets
        name: Validate Secrets
        run: |
          required_secrets=("GEMINI_API_KEY" "JITSI_VPAAS_MAGIC_COOKIE")
          missing_secrets=()
          
          for secret in "${required_secrets[@]}"; do
            if [ -z "${!secret}" ]; then
              missing_secrets+=("$secret")
            fi
          done
          
          if [ ${#missing_secrets[@]} -eq 0 ]; then
            echo "All required secrets are present"
            echo "secrets_valid=true" >> $GITHUB_OUTPUT
          else
            echo "::error::Missing required secrets: ${missing_secrets[*]}"
            exit 1
          fi

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: verify-secrets
    if: needs.verify-secrets.outputs.secrets_valid == 'true'
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
      meilisearch:
        image: getmeili/meilisearch:v1.11.1
        env:
          MEILI_MASTER_KEY: aSampleMasterKey
        ports:
          - 7700:7700

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-8.2-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-8.2-

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress --no-scripts

      - name: Generate APP_KEY
        run: echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> $GITHUB_ENV

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping --silent; then
              echo "MySQL is up."
              break
            fi
            echo "Waiting for MySQL to be ready..."
            sleep 3
          done

      - name: Wait for MeiliSearch
        run: |
          for i in {1..10}; do
            if curl -f http://localhost:7700/health; then
              echo "MeiliSearch is up."
              break
            fi
            echo "Waiting for MeiliSearch to be ready..."
            sleep 3
          done

      - name: Run Database Migrations
        run: php artisan migrate:fresh --env=testing --force

      - name: Run Test Suite
        run: ./vendor/bin/pest --verbose
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

      meilisearch:
        image: getmeili/meilisearch:latest
        env:
          MEILI_MASTER_KEY: aSampleMasterKey
        ports:
          - 7700:7700

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql
          tools: composer:v2

      - name: Set bootstrap environment
        run: |
          echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> $GITHUB_ENV
          echo "APP_NAME=TicketFlow" >> $GITHUB_ENV

      - name: Set up Test Environment
        run: |
          cat > .env << EOF
          APP_NAME=TicketFlow
          APP_ENV=testing
          APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')
          APP_URL=http://localhost

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=test_db
          DB_USERNAME=root
          DB_PASSWORD=password

          SCOUT_DRIVER=meilisearch
          MEILISEARCH_HOST=http://localhost:7700
          MEILISEARCH_KEY=aSampleMasterKey

          QUEUE_CONNECTION=sync

          GEMINI_API_KEY=${{ secrets.TEST_GEMINI_API_KEY }}
          JITSI_VPAAS_MAGIC_COOKIE=${{ secrets.TEST_JITSI_COOKIE }}
          EOF


      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: |
          composer install --prefer-dist --no-progress
          php artisan optimize:clear

      - name: Run Migrations
        run: php artisan migrate --env=testing --force

      - name: Import Search Index
        run: php artisan scout:import "App\Models\Ticket"

      - name: Run Tests
        run: |
          php artisan config:clear
          ./vendor/bin/pest
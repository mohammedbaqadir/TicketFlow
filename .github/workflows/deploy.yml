name: Deploy

on:
  workflow_run:
    workflows: [ "Release" ]
    types:
      - completed
    branches:
      - main

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to Production
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure SSH
        env:
          SSH_KEY: ${{ secrets.PROD_GH_RUNNER_TO_EC2_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/deployment_key
          chmod 600 ~/.ssh/deployment_key
          ssh-keyscan -H ticketflow.duckdns.org >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          PROD_APP_URL: ${{ secrets.PROD_APP_URL }}
          PROD_DB_HOST: ${{ secrets.PROD_DB_HOST }}
          PROD_DB_PORT: ${{ secrets.PROD_DB_PORT }}
          PROD_DB_NAME: ${{ secrets.PROD_DB_NAME }}
          PROD_DB_USER: ${{ secrets.PROD_DB_USER }}
          PROD_DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          PROD_MEILISEARCH_HOST: ${{ secrets.PROD_MEILISEARCH_HOST }}
          PROD_MEILISEARCH_KEY: ${{ secrets.PROD_MEILISEARCH_KEY }}
          PROD_GEMINI_API_KEY: ${{ secrets.PROD_GEMINI_API_KEY }}
          PROD_JITSI_COOKIE: ${{ secrets.PROD_JITSI_COOKIE }}
        run: |
          ssh -i ~/.ssh/deployment_key ${{ secrets.PROD_DEPLOY_USER }}@ticketflow.duckdns.org '
            cd ${{ secrets.PROD_DEPLOY_PATH }} &&
            # Put site in maintenance mode
            php artisan down &&
          
            # Pull latest code
            git pull origin main &&
          
            # Update environment file
            echo "APP_NAME=TicketFlow" > .env &&
            echo "APP_ENV=production" >> .env &&
            echo "APP_KEY=${{ secrets.PROD_APP_KEY }}" >> .env &&
            echo "APP_DEBUG=false" >> .env &&
            echo "APP_URL=$PROD_APP_URL" >> .env &&
            echo "" >> .env &&
            echo "DB_CONNECTION=mysql" >> .env &&
            echo "DB_HOST=$PROD_DB_HOST" >> .env &&
            echo "DB_PORT=$PROD_DB_PORT" >> .env &&
            echo "DB_DATABASE=$PROD_DB_NAME" >> .env &&
            echo "DB_USERNAME=$PROD_DB_USER" >> .env &&
            echo "DB_PASSWORD=$PROD_DB_PASSWORD" >> .env &&
            echo "" >> .env &&
            echo "SCOUT_DRIVER=meilisearch" >> .env &&
            echo "MEILISEARCH_HOST=$PROD_MEILISEARCH_HOST" >> .env &&
            echo "MEILISEARCH_KEY=$PROD_MEILISEARCH_KEY" >> .env &&
            echo "" >> .env &&
            echo "GEMINI_API_KEY=$PROD_GEMINI_API_KEY" >> .env &&
            echo "JITSI_VPAAS_MAGIC_COOKIE=$PROD_JITSI_COOKIE" >> .env &&  
          
          # Install/update dependencies
            composer install --no-dev --optimize-autoloader &&
            npm ci &&
            npm run build &&

            # Clear all caches
            php artisan optimize:clear &&
          
            # Run migrations
            php artisan migrate --force &&

            # Generate caches
            php artisan optimize &&
            php artisan view:cache &&
          
            # Setup storage link if needed
            php artisan storage:link || true &&
          
            # Handle queue workers
            php artisan queue:restart &&
          
            # Update search indices
            php artisan scout:sync-index-settings &&
          
            # Bring site back up
            php artisan up
          '
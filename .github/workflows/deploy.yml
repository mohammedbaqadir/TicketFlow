name: Deploy to Production

on:
  workflow_run:
    workflows: [ "Release" ]
    types: [ completed ]

jobs:
  pre-deployment-checks:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    env:
      PROD_DEPLOY_USER: ${{ secrets.PROD_DEPLOY_USER }}
      PROD_DEPLOY_HOST: ${{ secrets.PROD_DEPLOY_HOST }}
      PROD_DEPLOY_PATH: ${{ secrets.PROD_DEPLOY_PATH }}
      PROD_GH_RUNNER_TO_EC2_KEY: ${{ secrets.PROD_GH_RUNNER_TO_EC2_KEY }}
      PROD_APP_URL: ${{ secrets.PROD_APP_URL }}
      PROD_DB_HOST: ${{ secrets.PROD_DB_HOST }}
      PROD_DB_NAME: ${{ secrets.PROD_DB_NAME }}
      PROD_DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
      PROD_DB_PORT: ${{ secrets.PROD_DB_PORT }}
      PROD_DB_USER: ${{ secrets.PROD_DB_USER }}
      PROD_MEILISEARCH_HOST: ${{ secrets.PROD_MEILISEARCH_HOST }}
      PROD_MEILISEARCH_KEY: ${{ secrets.PROD_MEILISEARCH_KEY }}
      PROD_OPENROUTER_API_KEY: ${{ secrets.PROD_OPENROUTER_API_KEY }}
      PROD_JITSI_COOKIE: ${{ secrets.PROD_JITSI_COOKIE }}
    steps:
      - name: Check for Required Secrets
        run: |
          MISSING_SECRETS=()
          REQUIRED_SECRETS=("PROD_DEPLOY_USER" "PROD_DEPLOY_HOST" "PROD_DEPLOY_PATH" "PROD_GH_RUNNER_TO_EC2_KEY" "PROD_APP_URL" "PROD_DB_HOST" "PROD_DB_NAME" "PROD_DB_PASSWORD" "PROD_DB_PORT" "PROD_DB_USER" "PROD_MEILISEARCH_HOST" "PROD_MEILISEARCH_KEY" "PROD_OPENROUTER_API_KEY" "PROD_JITSI_COOKIE")
          
          for secret in "${REQUIRED_SECRETS[@]}"; do
            if [ -z "${!secret}" ]; then
              MISSING_SECRETS+=("$secret")
            fi
          done
          
          if [ ${#MISSING_SECRETS[@]} -ne 0 ]; then
            echo "‚ùå Missing required secrets: ${MISSING_SECRETS[@]}"
            exit 1
          fi

  deploy:
    needs: pre-deployment-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PROD_GH_RUNNER_TO_EC2_KEY }}

      - name: Trigger Remote Deployment
        env:
          GITHUB_SHA: ${{ github.sha }}
          PROD_DEPLOY_USER: ${{ secrets.PROD_DEPLOY_USER }}
          PROD_DEPLOY_HOST: ${{ secrets.PROD_DEPLOY_HOST }}
          PROD_DEPLOY_PATH: ${{ secrets.PROD_DEPLOY_PATH }}
          PROD_APP_URL: ${{ secrets.PROD_APP_URL }}
          PROD_DB_HOST: ${{ secrets.PROD_DB_HOST }}
          PROD_DB_NAME: ${{ secrets.PROD_DB_NAME }}
          PROD_DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          PROD_DB_PORT: ${{ secrets.PROD_DB_PORT }}
          PROD_DB_USER: ${{ secrets.PROD_DB_USER }}
          PROD_MEILISEARCH_HOST: ${{ secrets.PROD_MEILISEARCH_HOST }}
          PROD_MEILISEARCH_KEY: ${{ secrets.PROD_MEILISEARCH_KEY }}
          PROD_OPENROUTER_API_KEY: ${{ secrets.PROD_OPENROUTER_API_KEY }}
          PROD_JITSI_COOKIE: ${{ secrets.PROD_JITSI_COOKIE }}
        run: |
          ssh -o StrictHostKeyChecking=no $PROD_DEPLOY_USER@$PROD_DEPLOY_HOST "bash deploy.sh $GITHUB_SHA"